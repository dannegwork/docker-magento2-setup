#!/usr/bin/bashset -xif [ ! -f "$MAGENTO_ROOT/composer.json" ]; then    echo "Creating Magento ($M2SETUP_VERSION) project from composer"    composer create-project --repository-url=https://repo.magento.com/ magento/project-enterprise-edition=$M2SETUP_VERSION $MAGENTO_ROOT    mkdir -p $MAGENTO_ROOT/var/composer_home/ \        && cp /root/.composer/auth.json $MAGENTO_ROOT/var/composer_home/auth.jsonelse    echo "Magento installation found in $MAGENTO_ROOT, installing composer dependencies"     mkdir -p $MAGENTO_ROOT/var/composer_home/ \        && cp /root/.composer/auth.json $MAGENTO_ROOT/var/composer_home/auth.json    composer installfiecho "Setting +x permissions on bin/magento"chown 1001:1001 -R $MAGENTO_ROOTchmod +x $MAGENTO_ROOT/bin/magentoif [ ! "$M2SETUP_INSTALL_DB" = "false" ]; then    echo "Install Magento"    INSTALL_COMMAND="$MAGENTO_ROOT/bin/magento setup:install \        --db-host=$M2SETUP_DB_HOST \        --db-name=$MYSQL_DATABASE \        --db-user=$MYSQL_USER \        --db-password=$MYSQL_PASSWORD \        --base-url=$M2SETUP_BASE_URL \        --admin-firstname=$M2SETUP_ADMIN_FIRSTNAME \        --admin-lastname=$M2SETUP_ADMIN_LASTNAME \        --admin-email=$M2SETUP_ADMIN_EMAIL \        --admin-user=$M2SETUP_ADMIN_USER \        --admin-password=$M2SETUP_ADMIN_PASSWORD        --amqp-host=$M2SETUP_AMQP_HOST \        --amqp-port=$M2SETUP_AMQP_PORT \        --amqp-user=$RABBITMQ_USER \        --amqp-password=$RABBITMQ_PASSWORD \        --amqp-virtualhost=$M2SETUP_AMQP_VHOST"    # Use a separate value for secure base URL, if the variable is set    if [ -n "$M2SETUP_SECURE_BASE_URL" ]; then        INSTALL_COMMAND="$INSTALL_COMMAND --base-url-secure=$M2SETUP_SECURE_BASE_URL"    fi    # Only define a backend-frontname if the variable is set, or not empty.    if [ -n "$M2SETUP_BACKEND_FRONTNAME" ]; then        INSTALL_COMMAND="$INSTALL_COMMAND --backend-frontname=$M2SETUP_BACKEND_FRONTNAME"    fi    if [ "$M2SETUP_USE_SAMPLE_DATA" = "true" ]; then      echo "Install Magento Sample Data"      $MAGENTO_ROOT/bin/magento sampledata:deploy      composer --working-dir=$MAGENTO_ROOT update      INSTALL_COMMAND="$INSTALL_COMMAND --use-sample-data"    fi    $INSTALL_COMMAND    $MAGENTO_ROOT/bin/magento indexer:reindex    $MAGENTO_ROOT/bin/magento setup:static-content:deployelse    echo "Skipping DB installation"fiecho "Fixing file permissions.."[ -f "$MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.php" ] \  && sed -i 's/0770/0775/g' $MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.php[ -f "$MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.php" ] \  && sed -i 's/0660/0664/g' $MAGENTO_ROOT/vendor/magento/framework/Filesystem/DriverInterface.phpfind $MAGENTO_ROOT/pub -type f -exec chmod 664 {} \;find $MAGENTO_ROOT/pub -type d -exec chmod 775 {} \;find $MAGENTO_ROOT/var/generation -type d -exec chmod g+s {} \;chown -R 1001:1001 $MAGENTO_ROOTecho "Magento 2 installation is complete"# Creating symlinks with the existing projectsif [ ! -d "$MEDIA_SYMLINK" ] && [ -f "$MAGENTO_ROOT/composer.json" ]; then    echo "Mounting the media server"    chown -R 1001:1001 $SETUP_MEDIA_SERVER    ln -s $SETUP_MEDIA_SERVER .fi